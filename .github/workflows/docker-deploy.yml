Last login: Mon Mar  3 15:32:00 on ttys000
vanenibi@Benors-MacBook ~ % ssh -i ~/.ssh/mtcazurekey azureuser@13.94.185.228
Welcome to Ubuntu 18.04.6 LTS (GNU/Linux 5.4.0-1109-azure x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Tue Mar  4 15:02:35 UTC 2025

  System load:  0.0                Processes:              112
  Usage of /:   13.4% of 28.89GB   Users logged in:        0
  Memory usage: 38%                IP address for eth0:    10.125.1.4
  Swap usage:   0%                 IP address for docker0: 172.17.0.1

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

Expanded Security Maintenance for Infrastructure is not enabled.

5 updates can be applied immediately.
To see these additional updates run: apt list --upgradable

139 additional security updates can be applied with ESM Infra.
Learn more about enabling ESM Infra service for Ubuntu 18.04 at
https://ubuntu.com/18-04

New release '20.04.6 LTS' available.
Run 'do-release-upgrade' to upgrade to it.


Last login: Tue Mar  4 14:45:45 2025 from 212.129.76.129
azureuser@mtc-vm:~$ nano .github/workflows/docker-deploy.yml
azureuser@mtc-vm:~$ cd .
azureuser@mtc-vm:~$ cd NetworkAdminSys
azureuser@mtc-vm:~/NetworkAdminSys$ nano .github/workflows/docker-deploy.yml
azureuser@mtc-vm:~/NetworkAdminSys$ nano .github/workflows/docker-deploy.yml
azureuser@mtc-vm:~/NetworkAdminSys$ cd
azureuser@mtc-vm:~$ nano .github/workflows/docker-deploy.yml









  GNU nano 2.9.3                                                 .github/workflows/docker-deploy.yml                                                            

name: Deploy to Azure VM

on:
  push:
    branches:
      - main  # Runs when code is pushed to 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.VM_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H 13.94.185.228 >> ~/.ssh/known_hosts

    - name: Deploy files to VM
      run: |
        scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -r ./* adminuser@13.94.185.228 :~/my-python-app/

    - name: Deploy Docker Container on VM
      run: |
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no adminuser@13.94.185.228 << 'EOF'
        # Ensure Docker is installed
        sudo apt update && sudo apt install -y docker.io

        # Stop and remove old container if running
        docker stop my-python-app || true
        docker rm my-python-app || true

        # Remove old images to free up space (optional)
        docker rmi my-python-app:latest || true

        # Navigate to project directory
        cd ~/my-python-app

        # Build and run the Docker container
        docker build -t my-python-app:latest .
        docker run -d -p 5000:5000 --name my-python-app my-python-app:latest
